plugins {
    id("org.jetbrains.kotlin.plugin.compose") version "2.0.0"
}

android {
    namespace "com.msgkatz.ratesapp"
    //buildToolsVersion "33.0.2"
    compileSdkVersion 34
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['../../assets']
            jniLibs.srcDirs = ['libs']
        }

    }
    packagingOptions {
        exclude 'META-INF/robovm/ios/robovm.xml'
    }
    defaultConfig {
        applicationId "com.msgkatz.ratesapp"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        manifestPlaceholders = [useCrashlytics: "false"]

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                // If you don't need crash reporting for your debug build,
                // you can speed up your build by disabling mapping file uploading.
                mappingFileUploadEnabled false
            }
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures {
        compose true
        viewBinding true
        buildConfig = true
    }

    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        //incremental = false
    }

    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs = ['-Xjvm-default=all-compatibility']
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.10' //'1.3.2' //'1.5.10'
    }
}



dependencies {
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    //implementation project(':androidcmpapp:cnr-network-kmm')
    implementation project(':androidcmpapp:data:cnr-network-kmm')
    implementation project(':androidcmpapp:data:cnr-model-kmm')
    implementation project(':androidcmpapp:data:cnr-repos-kmm')
    implementation project(':androidcmpapp:core:uikit')
    implementation project(':androidcmpapp:feature:splash')
    implementation project(':androidcmpapp:feature:quoteasset')
    //implementation(":androidcmpapp:cnr-network-kmm")
    //implementation 'io.ktor:ktor-client-okhttp:2.3.6'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'junit:junit:4.12'
    def daggerVersion = '2.19' //'2.48.1'//'2.19' //'2.50' //'2.18' //'2.6'
    def retrofitVersion = '2.3.0'
    def butterknife_version = '8.5.1'
    def lifecycle_version = '1.1.1'
    def android_support = '28.0.0'  //'27.1.0'
    def glide_version = '4.16.0' //''4.8.0' //'4.2.0'
    def adxFrag = '1.3.2'
    def adxAppComp = '1.2.0-alpha02' //'1.1.0'
    def adxMaterialVersion = '1.1.0-beta01'
    def adxLegacyV4 = '1.0.0'
    def adxRecycler = '1.0.0'
    def adxCardviewVersion = '1.0.0'
    def adxTransition = '1.3.1'
    def adxMultidexVersion = '2.0.1'

    //implementation(":android")



    def androidxComposeBom = "2024.03.00" //"2023.10.01" //"2024.03.00"
    def composeBom = platform("androidx.compose:compose-bom:$androidxComposeBom")
    implementation(composeBom)
    androidTestImplementation(composeBom)

//    implementation "androidx.appcompat:appcompat:1.6.1"
//    implementation "androidx.core:core-ktx:1.12.0"
//    implementation "com.google.android.material:material:1.11.0"


//    kapt "androidx.room:room-compiler:2.6.1"
//    implementation "androidx.room:room-runtime:2.6.1"
//    implementation "androidx.room:room-ktx:2.6.1"

    //kapt "com.github.bumptech.glide:compiler:4.16.0"
    //implementation "com.github.bumptech.glide:glide:4.16.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.fragment:fragment-ktx:1.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.7.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.5.2'
//    kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.5.2'

    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.7"
    implementation "androidx.recyclerview:recyclerview:1.3.2"

//    implementation "androidx.viewpager2:viewpager2:1.0.0"
//    implementation "androidx.work:work-runtime-ktx:2.9.0"

    implementation "com.google.android.material:material:1.11.0"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0"

    // Compose
    implementation "androidx.navigation:navigation-compose:2.7.7"
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"

    implementation "androidx.compose.material:material"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "androidx.activity:activity-compose:1.8.2"
    debugImplementation "androidx.compose.ui:ui-tooling"

    //temporarily - for compose theme adapter
    //implementation("androidx.compose.ui:ui-tooling")
    implementation("androidx.compose.ui:ui-tooling:1.4.3")

    implementation "androidx.compose.material3:material3:1.3.0-alpha05"

    //causes networking to stop working
    //implementation ("io.coil-kt:coil-compose:2.5.0")
    implementation "com.github.bumptech.glide:compose:1.0.0-beta01"


    //tracing
    implementation "androidx.tracing:tracing:1.3.0-alpha02"

    implementation "androidx.compose.ui:ui-viewbinding"


    //Old stuff
    //implementation "androidx.appcompat:appcompat:1.5.1" //$adxAppComp"
    //implementation "androidx.core:core-ktx:1.8.0" //1.3.2"
    //implementation "com.google.android.material:material:1.7.0-rc01" //$adxMaterialVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //TODO having w/o -ktx part
    //implementation "androidx.fragment:fragment:1.5.1" //1.3.2" //$adxFrag"

    //implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //implementation 'androidx.constraintlayout:constraintlayout:2.1.0-beta01'

    //implementation "androidx.legacy:legacy-support-v4:$adxLegacyV4"
    //implementation "androidx.recyclerview:recyclerview:$adxRecycler"
    implementation "androidx.cardview:cardview:$adxCardviewVersion"
    implementation "androidx.transition:transition:$adxTransition"
    implementation "androidx.multidex:multidex:$adxMultidexVersion"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // Dagger dependencies
    //annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    //annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.13"
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'

    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'

    implementation 'com.squareup.okhttp3:okhttp:3.14.9' //3.12.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9' //3.10.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"


    implementation 'org.glassfish:javax.annotation:10.0-b28'

    implementation 'de.hdodenhof:circleimageview:2.1.0'

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    api 'com.google.guava:guava:27.0.1-android'


    implementation "com.github.bumptech.glide:glide:$glide_version"
    //annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation 'com.google.firebase:firebase-core:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'

}


// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
tasks.register('copyAndroidNatives') {
    doFirst {
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
        file("libs/x86_64/").mkdirs()
        file("libs/x86/").mkdirs()

        configurations.natives.copy().files.each { jar ->
            def outputDir = null
            if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
            if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
            if (jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
            if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
            if (outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

tasks.matching { it.name.contains("merge") && it.name.contains("JniLibFolders") }.configureEach { packageTask ->
    packageTask.dependsOn 'copyAndroidNatives'
}

tasks.register('run', Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.msgkatz.ratesapp/com.msgkatz.ratesapp.AndroidLauncher'
}

eclipse.project.name = appName + "-android"
